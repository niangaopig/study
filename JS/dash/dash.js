var ngpig = function () {
    function chunk(){

    }
    return{
/*         chunk: 
        compact:
        difference:
        differenceBy:
        drop:
        dropRight:
        dropWhile:
        fill:
        findIndex:
        findLastIndex:
        flatten:
        flattenDeep:
        flattenDepth:
        fromPairs:
        head:
        indexOf:
        initial:
        intersection:
        join:
        last:
        lastIndexOf:
        pull:
        reverse:
        sortedIndex:
        union:
        unionBy:
        uniq:
        uniqBy:
        unzip:
        without:
        xor:
        zip:
        countBy:
        every:
        filter:
        find:
        flatMap:
        flatMapDepth:
        forEach:
        groupBy:
        keyBy:
        map:
        partition:
        reduce:
        reduceRight:
        reject:
        sample:
        shuffle:
        size:
        some:
        sortBy:
        defer:
        delay:
        isArguments:
        isArry:
        isBoolean:
        isDate:
        isElement:
        isError
        isFinite:
        isFunction:
        isMatch:
        isNaN:
        isNil:
        isNull:
        isNumber:
        isObject:
        isRegExp:
        isString:
        isUndefined:
        toArray:
        ceil:
        max:
        maxBy:
        min:
        round:
        sumBy:
        random:
        assgnIn:
        defaults:
        findKey:
        forIn:
        forInRight:
        forOwn:
        forOwnRight:
        functions:
        get:
        has:
        invert:
        invoke:
        keys:
        mapKeys:
        mapValues:
        marge:
        omit:
        pick:
        result:
        set:
        toParis:
        values:
        escape:
        pad:
        padEnd:
        padStart:
        repeat:
        unescape:
        bindAll:
        range:
        mixin:
        times:
        uniqueld:
        cloneDeep:
        identity:
        concat:
        matches:
        proparty:
        negate:
        once:
        spread:
        curry:
        memoize:
        constant:
        propertOf:
         */

    }
}()